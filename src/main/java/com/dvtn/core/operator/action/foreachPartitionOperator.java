package com.dvtn.core.operator.action;

import org.apache.spark.SparkConf;
import org.apache.spark.api.java.JavaRDD;
import org.apache.spark.api.java.JavaSparkContext;
import org.apache.spark.api.java.function.VoidFunction;

import java.util.Arrays;
import java.util.Iterator;

/**
 * foreachPartition:
 *  void foreachPartition(VoidFunction<java.util.Iterator<T>> f)
 *  Applies a function f to each partition of this RDD.
 *  对RDD的数据一个分区一个分区地处理数据，是效率更高的action算子
 */
public class foreachPartitionOperator {
    public static void main(String[] args) {
        SparkConf conf = new SparkConf()
                .setMaster("local")
                .setAppName("mapPartitions");

        JavaSparkContext sc = new JavaSparkContext(conf);
        sc.setLogLevel("WARN");

        JavaRDD<String> rdd1 = sc.parallelize(Arrays.asList(
                "刘备", "关羽", "张飞", "诸葛亮",
                "曹操", "张辽", "典韦", "郭嘉",
                "孙权", "周瑜", "甘宁", "诸葛瑾"
        ), 3);

        /**
         * foreach一条一条处理，它是一个action算子
         * 创建数据库连接...
         * 拼接SQL执行数据库CRUD...
         * 关闭数据库连接...
         * 创建数据库连接...
         * 拼接SQL执行数据库CRUD...
         * 关闭数据库连接...
         * 创建数据库连接...
         * 拼接SQL执行数据库CRUD...
         * 关闭数据库连接...
         * 创建数据库连接...
         * 拼接SQL执行数据库CRUD...
         * 关闭数据库连接...
         * 创建数据库连接...
         * 拼接SQL执行数据库CRUD...
         * 关闭数据库连接...
         * 创建数据库连接...
         * 拼接SQL执行数据库CRUD...
         * 关闭数据库连接...
         * 创建数据库连接...
         * 拼接SQL执行数据库CRUD...
         * 关闭数据库连接...
         * 创建数据库连接...
         * 拼接SQL执行数据库CRUD...
         * 关闭数据库连接...
         * 创建数据库连接...
         * 拼接SQL执行数据库CRUD...
         * 关闭数据库连接...
         * 创建数据库连接...
         * 拼接SQL执行数据库CRUD...
         * 关闭数据库连接...
         * 创建数据库连接...
         * 拼接SQL执行数据库CRUD...
         * 关闭数据库连接...
         * 创建数据库连接...
         * 拼接SQL执行数据库CRUD...
         * 关闭数据库连接...
         *
         */
        rdd1.foreach(new VoidFunction<String>() {
            @Override
            public void call(String s) throws Exception {
                System.out.println("创建数据库连接...");
                System.out.println("拼接SQL执行数据库CRUD...");
                System.out.println("关闭数据库连接...");
            }
        });

        /**
         * 比foreach更高效的action算子，一个分区一个分区地处理数据
         *
         * 创建数据库连接...
         * 拼接SQL执行数据库CRUD...
         * 拼接SQL执行数据库CRUD...
         * 拼接SQL执行数据库CRUD...
         * 拼接SQL执行数据库CRUD...
         * 关闭数据库连接...
         * 创建数据库连接...
         * 拼接SQL执行数据库CRUD...
         * 拼接SQL执行数据库CRUD...
         * 拼接SQL执行数据库CRUD...
         * 拼接SQL执行数据库CRUD...
         * 关闭数据库连接...
         * 创建数据库连接...
         * 拼接SQL执行数据库CRUD...
         * 拼接SQL执行数据库CRUD...
         * 拼接SQL执行数据库CRUD...
         * 拼接SQL执行数据库CRUD...
         * 关闭数据库连接...
         */
        rdd1.foreachPartition(new VoidFunction<Iterator<String>>() {
            @Override
            public void call(Iterator<String> iter) throws Exception {
                System.out.println("创建数据库连接...");
                while(iter.hasNext()){
                    String s = iter.next();
                    System.out.println("拼接SQL执行数据库CRUD...");
                }
                System.out.println("关闭数据库连接...");
            }
        });

        sc.stop();
    }
}
